<?xml version="1.0"?>
<project name="RuralInvest4" default="full">
	<property file="build.properties" />
	<property name="riv.dir" 			location="../RuralInvest4"/>
	<property name="service.dir"		location="../service/target" />
	<property name="installer.dir"		location="${riv.dir}/src/installer"/>	
	<property name="staging.dir"		location="${installer.dir}/staging" />
	<property name="webinf.dir"			location="${riv.dir}/target/riv-4.0/WEB-INF" />
	<property name="cd.dir"				location="${installer.dir}/CD" />
	<property name="izinclude.dir"		location="../izpack-includes/target" />
	<property name="release.dir"		location="${releases.dir}/RIV-${riv.version}.${build.version}" />
	<property name="admin-string"		value="&lt;value&gt;true&lt;/value&gt;" />
	<property name="admin-variable"		value="&lt;value&gt;$IS_ADMIN&lt;/value&gt;" />
	
    <path id="build.classpath">
        <fileset dir="${izpack.dir}">
            <include name="lib/*.jar" />
        </fileset>
    </path>
	
	<taskdef name="izpack" classpathref="build.classpath" classname="com.izforge.izpack.ant.IzPackTask" />
	
	<target name="check-properties">
	   <property name="missing-build.properties" value="property is missing. Please define it into the ${basedir}/build.properties. That file must be taken off from the repository!"/>
    	<fail unless="izpack.dir" message="izpack.dir ${missing-build.properties}"/>
    </target>
	
	<target name="substitute-variables">
		<copy todir="${staging.dir}/lang">
			<fileset dir="${installer.dir}/resources/lang"/>
		</copy>
		<replace dir="${staging.dir}/lang" token="$app-version" value="${riv.version}.${build.version}"/>
	</target>
	
	<target name="copy-war">	
		<delete dir="${staging.dir}" quiet="true"/>
					
		<!-- web application -->
		<mkdir dir="${staging.dir}/webapp"/>
		<copy todir="${staging.dir}/webapp">
			<fileset dir="${war.dir}">
				<exclude name="**/*.bak"/>
				<exclude name="**/*.jrxml"/>
		    	<exclude name="**/CVS" />
		    	<exclude name="**/CVS/**"/>
		    	<exclude name="**/SVN" />
		    	<exclude name="**/SVN/**"/>
		    	<exclude name="**/.svn" />
		    	<exclude name="**/.svn/**"/>
				<exclude name="**/riv.lck"/>
		    	<exclude name="WEB-INF/data"/>
		    	<exclude name="WEB-INF/data/**"/>
				<exclude name="**/.gitignore"/>
			</fileset>
		</copy>

		<!-- refresh log4j log file -->
		<delete file="${webinf.dir}/log4j.log" />

		<!-- HSQL for installer db actions -->
		<copy file="${staging.dir}/webapp/WEB-INF/lib/hsqldb-2.2.9.jar" todir="${staging.dir}/lib" />
		<move file="${staging.dir}/lib/hsqldb-2.2.9.jar" tofile="${staging.dir}/lib/hsqldb.jar"/>
		<!-- commons-io for file copying and deleting in custom actions -->
		<copy file="${webinf.dir}/lib/commons-io-2.4.jar" todir="${staging.dir}/lib" />
		<move file="${staging.dir}/lib/commons-io-2.4.jar" tofile="${staging.dir}/lib/commons-io.jar"/>
	</target>
	
	<!--unicode-convert-messages, compile-reports, -->
	<target name="copy-app-files" depends="check-properties, copy-war">
		<!-- tomcat launcher service -->
		<copy file="${service.dir}/RIV-service.jar" todir="${staging.dir}" />
		<!-- IZPack custom actions -->
		<copy file="${izinclude.dir}/izpack-includes.jar" todir="${staging.dir}/lib" />
	</target>
	
	<target name="full" depends="copy-app-files, substitute-variables">
		<delete quiet="true">
			<fileset dir="${release.dir}"/>
		</delete>
		
		 <izpack input="src/installer/install.xml"
			output="${cd.dir}/lib/riv.jar"
			installerType="standard"
			basedir="${basedir}/src/installer"
			izPackDir="${izpack.dir}"
			inheritAll="true"/>
		
		<!-- admin version flag -->
		<copy file="src/installer/resources/av.riv" tofile="${cd.dir}/lib/av.riv" overwrite="true"/>

		<antcall target="create-zip">
			<param name="zip.name" value="RuralInvest-${riv.version}.${build.version}-admin.zip"/>
		</antcall>
		
		<delete file="${cd.dir}/lib/av.riv" />
		
		<antcall target="create-zip">
			<param name="zip.name" value="RuralInvest-${riv.version}.${build.version}-user.zip"/>
		</antcall>
	</target>
	
	<target name="iz-simple">
		<izpack input="src/installer/simple_install.xml"
				output="target/simple.jar"
				installerType="standard"
				basedir="${basedir}/src/installer"
				izPackDir="${izpack.dir}"
				inheritAll="true"/>
	</target>
		
	<target name="izonly">
		<copy file="${izinclude.dir}/izpack-includes.jar" todir="${staging.dir}/lib" />
		
		<izpack input="src/installer/install.xml"
					output="${cd.dir}/lib/riv.jar"
					installerType="standard"
					basedir="${basedir}/src/installer"
					izPackDir="${izpack.dir}"
					inheritAll="true"/>
	</target>
	
	   <target name="create-zip">
			<property name="zip.path" value="${release.dir}/${zip.name}"/>

	    	<zip destfile="${zip.path}" basedir="${cd.dir}" />
			<checksum file="${zip.path}" pattern="{0} * ${zip.name}" forceOverwrite="yes"/>
			<checksum file="${zip.path}" verifyProperty="isUserMD5ok"/>
			<fail unless="isUserMD5ok"/>
	    </target>
		
	<target name="convert-messages" description="Converts UTF-8 characters to unicode escaped ascii">		
		
		<condition property="jdk.native2ascii"	value="${jdk}/bin/native2ascii.exe">
			<and> <equals arg1="windows" arg2="${os.family}"/></and>
		</condition>
		<condition property="jdk.native2ascii"	value="${jdk}/bin/native2ascii">
			<and> <equals arg1="unix" arg2="${os.family}"/></and>
		</condition>
		<condition property="jdk.native2ascii"	value="${jdk}/bin/native2ascii">
			<and> <equals arg1="mac" arg2="${os.family}"/></and>
		</condition>

		<property name="messages.dir" location="${target.dir}/riv4/WEB-INF/messages/"/>
		<echo>converting messages in ${messages.dir}</echo>
		
		<exec executable="${jdk.native2ascii}">
			<arg line=" -encoding UTF8 '${messages.dir}/messages.properties.txt' '${messages.dir}/messages.properties'"/>
		</exec>
		<exec executable="${jdk.native2ascii}">
			<arg line=" -encoding UTF8 '${messages.dir}/messages_es.properties.txt' '${messages.dir}/messages_es.properties'"/>
		</exec>
		<exec executable="${jdk.native2ascii}">
			<arg line=" -encoding UTF8 '${messages.dir}/messages_fr.properties.txt' '${messages.dir}/messages_fr.properties'"/>
		</exec>
		<exec executable="${jdk.native2ascii}">
			<arg line=" -encoding UTF8 '${messages.dir}/messages_tr.properties.txt' '${messages.dir}/messages_tr.properties'"/>
		</exec>
		<exec executable="${jdk.native2ascii}">
			<arg line=" -encoding UTF8 '${messages.dir}/messages_pt.properties.txt' '${messages.dir}/messages_pt.properties'"/>
		</exec>
		<exec executable="${jdk.native2ascii}">
			<arg line=" -encoding UTF8 '${messages.dir}/messages_ru.properties.txt' '${messages.dir}/messages_ru.properties'"/>
		</exec>
		<exec executable="${jdk.native2ascii}">
			<arg line=" -encoding UTF8 '${messages.dir}/messages_ar.properties.txt' '${messages.dir}/messages_ar.properties'"/>
		</exec>
		<exec executable="${jdk.native2ascii}">
			<arg line=" -encoding UTF8 '${messages.dir}/messages_mn.properties.txt' '${messages.dir}/messages_mn.properties'"/>
		</exec>
		
		<copy file="${messages.dir}/messages.properties" tofile="${messages.dir}/messages_en.properties"/>
	
		<!--<delete>
	    	<fileset dir="${messages.dir}" includes="*.properties.txt"/>
	  	</delete>-->
	</target>
</project>