<sql>
  <version number="1.0">
    <query>
ALTER TABLE PROJECT_BLOCK_PATTERN ADD COLUMN FOO DECIMAL(7,2);
UPDATE PROJECT_BLOCK_PATTERN SET FOO=QUANTITY;
ALTER TABLE PROJECT_BLOCK_PATTERN DROP COLUMN QUANTITY;
ALTER TABLE PROJECT_BLOCK_PATTERN ALTER COLUMN FOO RENAME TO QUANTITY;
    </query>
  </version>
  <version number="2.0">
    <query>
-- add block order
ALTER TABLE PROJECT_BLOCK ADD ORDER_BY INT; 
ALTER TABLE PROJECT_BLOCK_ITEM ADD ORDER_BY INT; 
ALTER TABLE PROJECT_ITEM ADD ORDER_BY INT; 
ALTER TABLE PROJECT_ITEM_NONGEN ADD ORDER_BY INT; 
ALTER TABLE PROFILE_PRODUCT ADD ORDER_BY INT; 
ALTER TABLE PROFILE_PRODUCT_ITEM ADD ORDER_BY INT; 
ALTER TABLE PROFILE_ITEM ADD ORDER_BY INT;
-- add length units to blocks
ALTER TABLE PROJECT_BLOCK ADD LENGTH_UNIT INT DEFAULT 0 NOT NULL; 
ALTER TABLE PROFILE_PRODUCT ADD LENGTH_UNIT INT DEFAULT 0 NOT NULL; 
-- cost/input table
create cached table ref_item ( ref_item_id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1), project_id INTEGER, profile_id INTEGER,  
order_by INTEGER NOT NULL, class VARCHAR(10) NOT NULL, description VARCHAR(50), unit_type VARCHAR(50), unit_cost DECIMAL(7,2), transport DECIMAL(7,2), 
CONSTRAINT PK_REF_ITEM_ID PRIMARY KEY (ref_item_id), 
CONSTRAINT FK_REFITEM_PROJID FOREIGN KEY (project_id) REFERENCES project (project_id),
CONSTRAINT FK_REFITEM_PROFID FOREIGN KEY (profile_id) REFERENCES profile (profile_id) ); 
-- links to cost/input table 
ALTER TABLE PROFILE_ITEM ADD COLUMN LINKED_TO INT; 
ALTER TABLE PROFILE_ITEM ADD CONSTRAINT FK_PROFITEM_REFITEM FOREIGN KEY (linked_to) REFERENCES ref_item (ref_item_id); 
ALTER TABLE PROFILE_PRODUCT_ITEM ADD COLUMN LINKED_TO INT; 
ALTER TABLE PROFILE_PRODUCT_ITEM ADD CONSTRAINT FK_PROFPRODITEM_REFITEM FOREIGN KEY (linked_to) REFERENCES ref_item (ref_item_id); 
ALTER TABLE PROJECT_BLOCK_ITEM ADD COLUMN LINKED_TO INT; 
ALTER TABLE PROJECT_BLOCK_ITEM ADD CONSTRAINT FK_PROJBLOCKITEM_REFITEM FOREIGN KEY (linked_to) REFERENCES ref_item (ref_item_id); 
ALTER TABLE PROJECT_ITEM ADD COLUMN LINKED_TO INT; 
ALTER TABLE PROJECT_ITEM ADD CONSTRAINT FK_PROJITEM_REFITEM FOREIGN KEY (linked_to) REFERENCES ref_item (ref_item_id); 
ALTER TABLE PROJECT_ITEM_NONGEN ADD COLUMN LINKED_TO INT; 
ALTER TABLE PROJECT_ITEM_NONGEN ADD CONSTRAINT FK_PROJITEMNONGEN_REFITEM FOREIGN KEY (linked_to) REFERENCES ref_item (ref_item_id);
-- move results from settings to user
ALTER TABLE User ADD COLUMN RESULT_TECHNICIAN boolean default true;
ALTER TABLE User ADD COLUMN RESULT_FIELD_OFFICE boolean default true;
ALTER TABLE User ADD COLUMN RESULT_STATUS boolean default true;
ALTER TABLE User ADD COLUMN RESULT_ENVIRON boolean default true;
ALTER TABLE User ADD COLUMN RESULT_INVEST_TOTAL boolean default true;
ALTER TABLE User ADD COLUMN RESULT_INVEST_OWN boolean default true;
ALTER TABLE User ADD COLUMN RESULT_INVEST_DONATED boolean default true;
ALTER TABLE User ADD COLUMN RESULT_INVEST_FINANCED boolean default true;
ALTER TABLE User ADD COLUMN RESULT_WORKING_CAPITAL boolean default true;
ALTER TABLE User ADD COLUMN RESULT_NPV boolean default true;
ALTER TABLE User ADD COLUMN RESULT_IRR boolean default true;
ALTER TABLE User ADD COLUMN RESULT_BENEF_DIRECT boolean default true;
ALTER TABLE User ADD COLUMN RESULT_BENEF_INDIRECT boolean default true;
ALTER TABLE User ADD COLUMN RESULT_ANNUAL_EMPLOY boolean default true;
ALTER TABLE User ADD COLUMN RESULT_ANNUAL_NET_INCOME boolean default true;
ALTER TABLE User ADD COLUMN RESULT_INVEST_DIRECT boolean default true;
ALTER TABLE User ADD COLUMN RESULT_INVEST_INDIRECT boolean default true;
ALTER TABLE User ADD COLUMN RESULT_WC_OWN boolean default true;
ALTER TABLE User ADD COLUMN RESULT_WC_DONATED boolean default true;
ALTER TABLE User ADD COLUMN RESULT_WC_FINANCED boolean default true;
ALTER TABLE User ADD COLUMN RESULT_TOTAL_COSTS boolean default true;
ALTER TABLE User ADD COLUMN RESULT_TOTAL_COSTS_OWN boolean default true;
ALTER TABLE User ADD COLUMN RESULT_TOTAL_COSTS_DONATED boolean default true;
ALTER TABLE User ADD COLUMN RESULT_TOTAL_COSTS_FINANCED boolean default true;

UPDATE USER SET RESULT_TECHNICIAN = (SELECT RESULT_TECHNICIAN FROM SETTING);
UPDATE USER SET RESULT_FIELD_OFFICE = (SELECT RESULT_FIELD_OFFICE FROM SETTING);
UPDATE USER SET RESULT_STATUS = (SELECT RESULT_STATUS FROM SETTING);
UPDATE USER SET RESULT_ENVIRON = (SELECT RESULT_ENVIRON FROM SETTING);
UPDATE USER SET RESULT_INVEST_TOTAL = (SELECT RESULT_INVEST_TOTAL FROM SETTING);
UPDATE USER SET RESULT_INVEST_OWN = (SELECT RESULT_INVEST_OWN FROM SETTING);
UPDATE USER SET RESULT_INVEST_DONATED = (SELECT RESULT_INVEST_DONATED FROM SETTING);
UPDATE USER SET RESULT_INVEST_FINANCED = (SELECT RESULT_INVEST_FINANCED FROM SETTING);
UPDATE USER SET RESULT_WORKING_CAPITAL = (SELECT RESULT_WORKING_CAPITAL FROM SETTING);
UPDATE USER SET RESULT_NPV = (SELECT RESULT_NPV FROM SETTING);
UPDATE USER SET RESULT_IRR = (SELECT RESULT_IRR FROM SETTING);
UPDATE USER SET RESULT_BENEF_DIRECT = (SELECT RESULT_BENEF_DIRECT FROM SETTING);
UPDATE USER SET RESULT_BENEF_INDIRECT = (SELECT RESULT_BENEF_INDIRECT FROM SETTING);
UPDATE USER SET RESULT_ANNUAL_EMPLOY = (SELECT RESULT_ANNUAL_EMPLOY FROM SETTING);
UPDATE USER SET RESULT_ANNUAL_NET_INCOME = (SELECT RESULT_ANNUAL_NET_INCOME FROM SETTING);
UPDATE USER SET RESULT_INVEST_DIRECT = (SELECT RESULT_INVEST_DIRECT FROM SETTING);
UPDATE USER SET RESULT_INVEST_INDIRECT = (SELECT RESULT_INVEST_INDIRECT FROM SETTING);

ALTER TABLE SETTING DROP COLUMN RESULT_TECHNICIAN;
ALTER TABLE SETTING DROP COLUMN RESULT_STATUS;
ALTER TABLE SETTING DROP COLUMN RESULT_FIELD_OFFICE;
ALTER TABLE SETTING DROP COLUMN RESULT_ENVIRON;
ALTER TABLE SETTING DROP COLUMN RESULT_INVEST_TOTAL;
ALTER TABLE SETTING DROP COLUMN RESULT_INVEST_OWN;
ALTER TABLE SETTING DROP COLUMN RESULT_INVEST_DONATED;
ALTER TABLE SETTING DROP COLUMN RESULT_INVEST_FINANCED;
ALTER TABLE SETTING DROP COLUMN RESULT_WORKING_CAPITAL;
ALTER TABLE SETTING DROP COLUMN RESULT_NPV;
ALTER TABLE SETTING DROP COLUMN RESULT_IRR;
ALTER TABLE SETTING DROP COLUMN RESULT_BENEF_DIRECT;
ALTER TABLE SETTING DROP COLUMN RESULT_BENEF_INDIRECT;
ALTER TABLE SETTING DROP COLUMN RESULT_ANNUAL_EMPLOY;
ALTER TABLE SETTING DROP COLUMN RESULT_ANNUAL_NET_INCOME;
ALTER TABLE SETTING DROP COLUMN RESULT_INVEST_DIRECT;
ALTER TABLE SETTING DROP COLUMN RESULT_INVEST_INDIRECT;
-- add beneficiary families to profile
ALTER TABLE PROFILE ADD COLUMN BENEF_FAMILIES INTEGER;
-- generic app settings
DELETE FROM app_config where config_id=-1;
INSERT INTO APP_CONFIG (config_id, class, description, income_gen) VALUES (-2, 2, 'generic NIG category', false);
INSERT INTO APP_CONFIG (config_id, class, description, income_gen) VALUES (-3, 1, 'generic beneficiary', null);
INSERT INTO APP_CONFIG (config_id, class, description, income_gen) VALUES (-4, 0, 'generic field office', null);
INSERT INTO APP_CONFIG (config_id, class, description, income_gen) VALUES (-5, 2, 'generic IG category', true);
INSERT INTO APP_CONFIG (config_id, class, description, income_gen) VALUES (-6, 3, 'generic enviro category', null);
-- add enviro categories and convert existing categories to coded values
INSERT INTO APP_CONFIG (config_id, class, description, income_gen) VALUES (-30, 3, 'A', null);
INSERT INTO APP_CONFIG (config_id, class, description, income_gen) VALUES (-31, 3, 'B', null);
INSERT INTO APP_CONFIG (config_id, class, description, income_gen) VALUES (-32, 3, 'C', null);
INSERT INTO APP_CONFIG (config_id, class, description, income_gen) VALUES (-33, 3, 'D', null);
ALTER TABLE PROJECT ADD COLUMN ENVIRO_CATEGORY INTEGER;
ALTER TABLE PROJECT ADD CONSTRAINT FK_ENVIROCAT_APPCONFIG FOREIGN KEY (enviro_category) REFERENCES APP_CONFIG (config_id); 
UPDATE PROJECT SET ENVIRO_CATEGORY=-30 WHERE enviro_class='A';
UPDATE PROJECT SET ENVIRO_CATEGORY=-31 WHERE enviro_class='B';
UPDATE PROJECT SET ENVIRO_CATEGORY=-32 WHERE enviro_class='C';
UPDATE PROJECT SET ENVIRO_CATEGORY=-33 WHERE enviro_class='D';
ALTER TABLE PROJECT DROP COLUMN enviro_class;
ALTER TABLE PROJECT_RESULT ADD COLUMN ENVIRO_CATEGORY INTEGER;
ALTER TABLE PROJECT_RESULT ADD CONSTRAINT FK_ENVIROCATRESULT_APPCONFIG FOREIGN KEY (enviro_category) REFERENCES APP_CONFIG (config_id); 
UPDATE PROJECT_RESULT SET ENVIRO_CATEGORY=-30 WHERE enviro_class='A';
UPDATE PROJECT_RESULT SET ENVIRO_CATEGORY=-31 WHERE enviro_class='B';
UPDATE PROJECT_RESULT SET ENVIRO_CATEGORY=-32 WHERE enviro_class='C';
UPDATE PROJECT_RESULT SET ENVIRO_CATEGORY=-33 WHERE enviro_class='D';
ALTER TABLE PROJECT_RESULT DROP COLUMN enviro_class;
-- add working capital from own resources
ALTER TABLE PROJECT ADD COLUMN CAPITAL_OWN DECIMAL(7,2) DEFAULT 0;
-- add new IG project indicators
ALTER TABLE PROJECT_RESULT ADD COLUMN wc_own DECIMAL(7,2);
ALTER TABLE PROJECT_RESULT ADD COLUMN wc_donated DECIMAL(7,2);
ALTER TABLE PROJECT_RESULT ADD COLUMN wc_financed DECIMAL(7,2);
-- "created by" for profiles and projects
ALTER TABLE PROJECT ADD COLUMN created_by VARCHAR(100);
ALTER TABLE PROFILE ADD COLUMN created_by VARCHAR(100);
  <!--   </query> // THE FOLLOWING ARE ALREADY INCLUDED IN 2.0
  </version>
  <version number="2.1">
    <query> -->
-- new project indicators
ALTER TABLE project_result ADD COLUMN npv_with_donation DECIMAL(7,2);
ALTER TABLE project_result ADD COLUMN irr_with_donation DECIMAL(12,2);
ALTER TABLE User ADD COLUMN RESULT_NPV_WITH boolean default true;
ALTER TABLE User ADD COLUMN RESULT_IRR_WITH boolean default true;
    </query>
   </version>
   <version number="2.2">
   	<query>
-- income cycles for block first year
ALTER TABLE project_block ADD COLUMN cycle_first_year_income INTEGER;
UPDATE project_block SET cycle_first_year_income = cycle_first_year;
-- default user-defined project statuses
INSERT INTO app_config (config_id, class, description) VALUES (-20, 4, 'Proposal');
INSERT INTO app_config (config_id, class, description) VALUES (-21, 4, 'Approved');
INSERT INTO app_config (config_id, class, description) VALUES (-22, 4, 'Investment');
INSERT INTO app_config (config_id, class, description) VALUES (-23, 4, 'Operational');
INSERT INTO app_config (config_id, class, description) VALUES (-7, 4, 'Generic project status');
UPDATE project SET status=-20 WHERE status=0;
UPDATE project SET status=-21 WHERE status=1;
UPDATE project SET status=-22 WHERE status=2;
UPDATE project SET status=-23 WHERE status=3;
ALTER TABLE profile ADD COLUMN status Integer;
UPDATE profile SET status=-7 WHERE status is NULL;
-- new indicators
ALTER TABLE profile_result ADD COLUMN status Integer default -7 NOT NULL;
ALTER TABLE project_result ADD COLUMN user_code VARCHAR(20);
ALTER TABLE User ADD COLUMN result_user_code boolean default true;
-- e-mail field to 255 
ALTER TABLE user ADD COLUMN FOO VARCHAR(255);
UPDATE user SET FOO=email;
ALTER TABLE user DROP COLUMN email;
ALTER TABLE user ALTER COLUMN FOO RENAME TO email; 	
   	</query>
   </version>
    <version number="3.0">
   	<query>
-- admin1 and admin2 categories
ALTER TABLE setting ADD COLUMN admin1_title VARCHAR(100);
ALTER TABLE setting ADD COLUMN admin1_help VARCHAR(500);
ALTER TABLE setting ADD COLUMN admin1_enabled boolean default false;
ALTER TABLE setting ADD COLUMN admin2_title VARCHAR(100);
ALTER TABLE setting ADD COLUMN admin2_help VARCHAR(500);
ALTER TABLE setting ADD COLUMN admin2_enabled boolean default false;
INSERT INTO app_config (config_id, class, description) VALUES (-8, 5, 'Generic custom field 1');
INSERT INTO app_config (config_id, class, description) VALUES (-9, 6, 'Generic custom field 2');
ALTER TABLE project ADD COLUMN app_config1 INTEGER default -8;
ALTER TABLE project ADD COLUMN app_config2 INTEGER default -9;   
-- admin misc text fields
ALTER TABLE setting ADD COLUMN admin_misc1_title VARCHAR(100);
ALTER TABLE setting ADD COLUMN admin_misc1_help VARCHAR(500);
ALTER TABLE setting ADD COLUMN admin_misc1_multiline boolean default false;
ALTER TABLE setting ADD COLUMN admin_misc1_enabled boolean default false;
ALTER TABLE setting ADD COLUMN admin_misc2_title VARCHAR(100);
ALTER TABLE setting ADD COLUMN admin_misc2_help VARCHAR(500);
ALTER TABLE setting ADD COLUMN admin_misc2_multiline boolean default false;
ALTER TABLE setting ADD COLUMN admin_misc2_enabled boolean default false;
ALTER TABLE setting ADD COLUMN admin_misc3_title VARCHAR(100);
ALTER TABLE setting ADD COLUMN admin_misc3_help VARCHAR(500);
ALTER TABLE setting ADD COLUMN admin_misc3_multiline boolean default false;
ALTER TABLE setting ADD COLUMN admin_misc3_enabled boolean default false;
ALTER TABLE project ADD COLUMN admin_misc1 VARCHAR(2000);
ALTER TABLE project ADD COLUMN admin_misc2 VARCHAR(2000);
ALTER TABLE project ADD COLUMN admin_misc3 VARCHAR(2000);
-- search result columns
ALTER TABLE user ADD COLUMN result_project_category boolean default false;
ALTER TABLE user ADD COLUMN result_benef_category boolean default false;
ALTER TABLE user ADD COLUMN result_admin_category1 boolean default false;
ALTER TABLE user ADD COLUMN result_admin_category2 boolean default false;
-- project result fields
ALTER TABLE project_result ADD COLUMN app_config1 INTEGER default -8;
ALTER TABLE project_result ADD COLUMN app_config2 INTEGER default -9;
   	</query>
   	</version>
   	<version number="3.1">
   	<query>
 -- currency formatting data
ALTER TABLE setting ADD COLUMN dec_separate CHAR(1) default '.';
ALTER TABLE setting ADD COLUMN thou_separate CHAR(1) default ',';
ALTER TABLE setting ADD COLUMN dec_length INTEGER default 2;
   	</query>
   	</version>
   	<version number="3.2">
   	<query>
-- test 
ALTER TABLE user ADD  COLUMN foo DECIMAL(7,2);
ALTER TABLE user DROP COLUMN foo;
   	</query>
   	</version>
   	<!-- 3.9 is not a real release of RuralInvest. These are the sql commands needed to make the db openable by HSQLDB 2.3 and greater -->
   	<version number="3.9">
   	<query>
-- make version DECIMAL
ALTER TABLE version ADD COLUMN foo DECIMAL(4,2) BEFORE description;
UPDATE version SET foo=version
ALTER TABLE version DROP COLUMN version;
ALTER TABLE version ALTER COLUMN foo RENAME TO version;

-- project results precision
delete from project_result;
ALTER TABLE project_result ALTER COLUMN annual_employment DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN annual_net_income DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN npv DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN irr DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN invest_total DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN invest_own DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN invest_donated DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN working_capital DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN wc_own DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN wc_donated DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN wc_financed DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN npv_with_donation DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN irr_with_donation DECIMAL(15,4);
ALTER TABLE project_result ALTER COLUMN project_name VARCHAR(100);

--  precision on profile result
delete from profile_result;
ALTER TABLE profile_result ALTER COLUMN investment_total Decimal(15,4); 
ALTER TABLE profile_result ALTER COLUMN investment_own Decimal(15,4); 
ALTER TABLE profile_result ALTER COLUMN tot_income Decimal(15,4); 
ALTER TABLE profile_result ALTER COLUMN oper_cost Decimal(15,4); 
ALTER TABLE profile_result ALTER COLUMN annual_reserve Decimal(15,4); 
ALTER TABLE profile_result ALTER COLUMN invest_per_benef Decimal(15,4); 
ALTER TABLE profile_result ALTER COLUMN cost_per_benef Decimal(15,4); 
ALTER TABLE profile_result ALTER COLUMN general_cost Decimal(15,4);

-- precision on settings table
ALTER TABLE setting ALTER COLUMN lang VARCHAR(2);
UPDATE setting SET exch_rate=ROUND(exch_rate,4);
UPDATE setting SET discount_rate=ROUND(discount_rate,4);
ALTER TABLE setting ALTER COLUMN exch_rate DECIMAL(15,4);
ALTER TABLE setting ALTER COLUMN discount_rate DECIMAL(15,4);
ALTER TABLE setting ALTER COLUMN currency_sym VARCHAR(20);
ALTER TABLE setting ALTER COLUMN org_logo BINARY(1048576);

-- user table precision
ALTER TABLE user ALTER COLUMN organization  VARCHAR(100); 
ALTER TABLE user ALTER COLUMN location  VARCHAR(100); 
ALTER TABLE user ALTER COLUMN description  VARCHAR(100); 

-- profile table
ALTER TABLE profile drop column currency;
ALTER TABLE profile ALTER COLUMN benef_name  VARCHAR(150); 

-- project block item
UPDATE project_block_item SET unit_num = ROUND(unit_num,4);
UPDATE project_block_item SET unit_cost = ROUND(unit_cost,4);
UPDATE project_block_item SET qty_intern = ROUND(qty_intern,4);
UPDATE project_block_item SET transport = ROUND(transport,4);
ALTER TABLE project_block_item ALTER COLUMN unit_num Decimal(15,4);
ALTER TABLE project_block_item ALTER COLUMN unit_cost Decimal(15,4);
ALTER TABLE project_block_item ALTER COLUMN qty_intern Decimal(15,4);
ALTER TABLE project_block_item ALTER COLUMN transport Decimal(15,4);

-- profile item
UPDATE profile_item SET unit_num=ROUND(unit_num,4);
UPDATE profile_item SET unit_cost=ROUND(unit_cost,4);
UPDATE profile_item SET own_resource=ROUND(own_resource,4);
UPDATE profile_item SET salvage=ROUND(salvage,4);
ALTER TABLE profile_item ALTER COLUMN unit_num Decimal(15,4);
ALTER TABLE profile_item ALTER COLUMN unit_cost Decimal(15,4);
ALTER TABLE profile_item ALTER COLUMN own_resource Decimal(15,4);
ALTER TABLE profile_item ALTER COLUMN salvage Decimal(15,4);

-- profile product item
UPDATE profile_product_item SET unit_num=ROUND(unit_num,4);
UPDATE profile_product_item SET unit_cost=ROUND(unit_cost,4);
UPDATE profile_product_item SET transport=ROUND(transport,4);
ALTER TABLE profile_product_item ALTER COLUMN unit_num Decimal(15,4);
ALTER TABLE profile_product_item ALTER COLUMN unit_cost Decimal(15,4);
ALTER TABLE profile_product_item ALTER COLUMN transport Decimal(15,4);

-- some users have added text data longer than expected, increase size to 10000 (100 for project_name)
ALTER TABLE project ALTER COLUMN project_name VARCHAR(100);
ALTER TABLE project ALTER COLUMN benef_desc  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN proj_desc  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN justification  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN activities  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN technology  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN requirements  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN market  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN organization  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN assumptions  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN enviro_impact  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN sustainability  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN source_funds  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN recc_desc  VARCHAR(10000);
ALTER TABLE project ALTER COLUMN enviro_impact  VARCHAR(10000);

-- same for profiles
ALTER TABLE profile ALTER COLUMN benef_desc VARCHAR(10000);
ALTER TABLE profile ALTER COLUMN recc_desc VARCHAR(10000);
ALTER TABLE profile ALTER COLUMN market VARCHAR(10000);
ALTER TABLE profile ALTER COLUMN enviro_impact VARCHAR(10000);
ALTER TABLE profile ALTER COLUMN organization VARCHAR(10000);
ALTER TABLE profile ALTER COLUMN source_funds VARCHAR(10000);
ALTER TABLE profile ALTER COLUMN proj_desc VARCHAR(10000);

-- precision on project table
UPDATE project SET capital_donate=ROUND(capital_donate,4);
UPDATE project SET loan2_amt=ROUND(loan2_amt,4);
UPDATE project SET capital_own=ROUND(capital_own,4);
ALTER TABLE project ALTER COLUMN capital_donate DECIMAL(15,4);
ALTER TABLE project ALTER COLUMN loan2_amt DECIMAL(15,4);
ALTER TABLE project ALTER COLUMN capital_own DECIMAL(15,4);
ALTER TABLE project drop column category_other;

-- project item precision
UPDATE project_item SET unit_num=ROUND(unit_num,4);
UPDATE project_item SET unit_cost=ROUND(unit_cost,4);
UPDATE project_item SET donated=ROUND(donated,4);
UPDATE project_item SET own_resources=ROUND(own_resources,4);
UPDATE project_item SET maint_cost=ROUND(maint_cost,4);
UPDATE project_item SET salvage=ROUND(salvage,4);
ALTER TABLE project_item ALTER COLUMN unit_num DECIMAL(15,4);
ALTER TABLE project_item ALTER COLUMN unit_cost DECIMAL(15,4);
ALTER TABLE project_item ALTER COLUMN donated DECIMAL(15,4);
ALTER TABLE project_item ALTER COLUMN own_resources DECIMAL(15,4);
ALTER TABLE project_item ALTER COLUMN maint_cost DECIMAL(15,4);
ALTER TABLE project_item ALTER COLUMN salvage DECIMAL(15,4);

-- reference item precision
UPDATE ref_item SET unit_cost=ROUND(unit_cost,4);
UPDATE ref_item SET transport=ROUND(transport,4);
ALTER TABLE ref_item ALTER COLUMN unit_cost DECIMAL(15,4);
ALTER TABLE ref_item ALTER COLUMN transport DECIMAL(15,4);
   	</query>
   	</version>
   	<version number="4.0">
   	<query>
--project block chronology
CREATE TABLE pbc (block_id INT NOT NULL, chron_id VARCHAR(6) NOT NULL, PRIMARY KEY(block_id, chron_id));
ALTER TABLE pbc ADD FOREIGN KEY(block_id) REFERENCES project_block(block_id);
INSERT INTO pbc (chron_id, block_id) SELECT chron_id, block_id FROM project_block_chron;
DROP TABLE project_block_chron;
ALTER TABLE pbc RENAME TO project_block_chron;

-- add primary key to project block pattern
CREATE TABLE pbp (patterns_key INT GENERATED BY DEFAULT AS IDENTITY, block_id INT NOT NULL, year_num INT NOT NULL, qty DECIMAL(15,4) NOT NULL);
ALTER TABLE pbp ADD FOREIGN KEY (block_id) REFERENCES project_block(block_id);
ALTER TABLE pbp ADD CONSTRAINT block_year UNIQUE (block_id, year_num);
INSERT INTO pbp (block_id, year_num, qty) SELECT block_id, year_num, quantity FROM project_block_pattern;
DROP TABLE project_block_pattern;
ALTER TABLE pbp RENAME TO project_block_pattern;

-- restructuring project item nongen types
-- input / materials
INSERT INTO project_item (class, project_id, description, unit_type, unit_num, unit_cost, donated, own_resources, order_by, linked_to) select '9', project_id, description, unit_type, unit_num, unit_cost, other1, state_public, order_by, linked_to from project_item_nongen WHERE class='0';
-- labour
INSERT INTO project_item (class, project_id, description, unit_type, unit_num, unit_cost, donated, own_resources, order_by, linked_to) select '8', project_id, description, unit_type, unit_num, unit_cost, other1, state_public, order_by, linked_to from project_item_nongen WHERE class='1';
-- general / maintenance
INSERT INTO project_item (class, project_id, description, unit_type, unit_num, unit_cost, donated, own_resources, order_by, linked_to) select '10', project_id, description, unit_type, unit_num, unit_cost, other1, state_public, order_by, linked_to from project_item_nongen WHERE class='2';
DROP TABLE project_item_nongen;

--project block split into two subclasses
ALTER TABLE project_block ADD COLUMN class VARCHAR(1) DEFAULT '0' NOT NULL;
UPDATE project_block SET class='1' WHERE with_without=1;
ALTER TABLE project_block DROP COLUMN with_without;

-- profile product split into two subclasses
ALTER TABLE profile_product ADD COLUMN class VARCHAR(1) DEFAULT '0' NOT NULL;
UPDATE profile_product SET class='0' WHERE with_without=false;
ALTER TABLE profile_product DROP COLUMN with_without;

-- store attached files in db
CREATE TABLE profile_file (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1), profile_id INT NOT NULL, filename VARCHAR(100) NOT NULL, length BIGINT NOT NULL, content BLOB);
ALTER TABLE profile_file ADD FOREIGN KEY (profile_id) REFERENCES profile(profile_id);
ALTER TABLE profile_file ADD CONSTRAINT profile_filename UNIQUE (profile_id, filename);
CREATE TABLE project_file (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1), project_id INT NOT NULL, filename VARCHAR(100) NOT NULL, length BIGINT NOT NULL, content BLOB);
ALTER TABLE project_file ADD FOREIGN KEY (project_id) REFERENCES project(project_id);
ALTER TABLE project_file ADD CONSTRAINT project_filename UNIQUE (project_id, filename);

-- store wc_period in project_result
ALTER TABLE PROJECT_RESULT ADD COLUMN wc_period INT;
   	</query>
   	</version>
   	<version number="4.1">
   	<query>
-- no-cycle blocks
ALTER TABLE project_block ADD COLUMN cycles BOOLEAN DEFAULT true;
UPDATE project_block SET cycles=true;
-- per-year contributions for nig projects
ALTER TABLE project ADD COLUMN per_year_contrib BOOLEAN DEFAULT false;
UPDATE project SET per_year_contrib=false;
-- contributor column for nig project contributions
ALTER TABLE project_item ADD COLUMN contributor VARCHAR(100);
UPDATE project_item SET contributor='', year_begin=1 WHERE class=5;
--longer project name for backwards compatibility
ALTER TABLE project ALTER COLUMN project_name VARCHAR(100);
ALTER TABLE project_result ALTER COLUMN project_name VARCHAR(100);
   	</query>
   	</version>
   	<version number="4.2">
   	<query>
-- cleanup error from 4.1
DELETE FROM version WHERE version=4.1 AND recalculate IS FALSE; 
UPDATE version SET recalculate=FALSE WHERE version=4.1;
--donor table
CREATE CACHED TABLE donor (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1), project_id INT NOT NULL, description VARCHAR(150) NOT NULL, contrib_type INT NOT NULL, not_specified BOOLEAN NOT NULL, order_by INT NOT NULL, CONSTRAINT pk_donor_id PRIMARY KEY (id), CONSTRAINT fk_donor_project FOREIGN KEY (project_id) REFERENCES project(project_id), CONSTRAINT uq_project_order UNIQUE (project_id, order_by) );
--donations per project item
CREATE CACHED TABLE project_item_donation (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1), item_id INT NOT NULL, donor_order_by INT NOT NULL, amount DECIMAL(15,4), CONSTRAINT fk_project_item_donation_project_item FOREIGN KEY (item_id) REFERENCES project_item(proj_item_id), CONSTRAINT unique_item_donor UNIQUE (item_id, donor_order_by) );
--donations per block item
CREATE CACHED TABLE project_block_item_donation (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1), block_item_id INT NOT NULL, donor_order_by INT NOT NULL, amount DECIMAL(15,4), CONSTRAINT fk_block_item_donation_project_item FOREIGN KEY (block_item_id) REFERENCES project_block_item(prod_item_id), CONSTRAINT unique_block_item_donor UNIQUE (block_item_id, donor_order_by));
-- add 'not specified' donor to each project
INSERT INTO donor (project_id, description, contrib_type, not_specified, order_by) SELECT project_id, 'not specified', 4, true, 0 FROM project;
-- move 'donated' field for project items to new table
INSERT INTO project_item_donation (item_id, donor_order_by, amount) SELECT i.proj_item_id, d.order_by, i.donated FROM project_item i LEFT JOIN donor d ON (d.project_id=i.project_id) WHERE i.donated IS NOT NULL AND i.donated &lt;&gt;0;
-- add 'state-public' donor to each NIG project 
INSERT INTO donor (project_id, description, contrib_type, not_specified, order_by) SELECT project_id, 'state-public', 4, false, 1 FROM project WHERE income_gen IS FALSE;
-- move 'own_resources' (i.e. state-public) from NIG project items to new table
INSERT INTO project_item_donation (item_id, donor_order_by, amount) SELECT i.proj_item_id, d.order_by, i.own_resources FROM project_item i LEFT JOIN donor d ON (d.project_id=i.project_id AND d.not_specified IS FALSE) WHERE i.class&gt;=8 AND i.class&lt;=10 AND i.own_resources IS NOT NULL AND i.own_resources&lt;&gt;0;
UPDATE project_item SET own_resources=null WHERE class&gt;=8 AND class&lt;=10;
-- no more need for 'donated' column
ALTER TABLE project_item DROP COLUMN donated;

-- fix problem with contributions from early builds of RIV4.1
UPDATE project_item c SET c.year_begin=1 WHERE c.class=5 AND c.year_begin IS NULL;
UPDATE project_item c SET c.contributor='' WHERE c.class=5 AND c.contributor IS NULL;

-- add donors from nig project contributions
INSERT INTO donor (project_id, description, contrib_type, not_specified, order_by) SELECT DISTINCT project_id, contributor, contrib_type, false, (ROW_NUMBER() OVER()) * -1 FROM project_item WHERE class=5 GROUP BY project_id, contributor, contrib_type;
-- fix order_by for the above
UPDATE donor d SET d.order_by= (SELECT count(*)-1 FROM donor A INNER JOIN donor B ON A.id>=B.id AND A.project_id=B.project_id GROUP BY A.project_id, A.id HAVING A.id=d.id)
-- set donor in nig project contributions
ALTER TABLE project_item ADD COLUMN donor_order_by INT;
UPDATE project_item pi SET pi.donor_order_by=(SELECT d.order_by FROM donor d WHERE pi.project_id=d.project_id AND pi.contrib_type=d.contrib_type AND pi.contributor=d.description) WHERE pi.class=5;
ALTER TABLE project_item DROP COLUMN contributor;
ALTER TABLE project_item DROP COLUMN contrib_type;

-- new project results columns
ALTER TABLE project_result ADD COLUMN negative_years INTEGER;

-- record login
ALTER TABLE user ADD COLUMN last_login TIMESTAMP;

-- no null language
UPDATE USER u SET u.lang=(SELECT TOP 1 s.lang FROM setting s ORDER BY s.setting_id DESC) WHERE u.lang IS NULL;

-- compress lob
SET FILES LOB COMPRESSED TRUE;
	</query>
	</version>
   	<version number="4.3">
   	<query>
-- project results precision
DELETE FROM project_result;
ALTER TABLE project_result ALTER COLUMN annual_employment DECIMAL(25,4);
ALTER TABLE project_result ALTER COLUMN annual_net_income DECIMAL(25,4);
ALTER TABLE project_result ALTER COLUMN npv DECIMAL(25,4);
ALTER TABLE project_result ALTER COLUMN invest_total DECIMAL(25,4);
ALTER TABLE project_result ALTER COLUMN invest_own DECIMAL(25,4);
ALTER TABLE project_result ALTER COLUMN invest_donated DECIMAL(25,4);
ALTER TABLE project_result ALTER COLUMN working_capital DECIMAL(25,4);
ALTER TABLE project_result ALTER COLUMN wc_own DECIMAL(25,4);
ALTER TABLE project_result ALTER COLUMN wc_donated DECIMAL(25,4);
ALTER TABLE project_result ALTER COLUMN wc_financed DECIMAL(25,4);
ALTER TABLE project_result ALTER COLUMN npv_with_donation DECIMAL(25,4);
ALTER TABLE project_result ALTER COLUMN irr_with_donation DECIMAL(25,4);
	
-- profile results precision
DELETE FROM profile_result;
ALTER TABLE profile_result ALTER COLUMN investment_total Decimal(25,4); 
ALTER TABLE profile_result ALTER COLUMN investment_own Decimal(25,4); 
ALTER TABLE profile_result ALTER COLUMN tot_income Decimal(25,4); 
ALTER TABLE profile_result ALTER COLUMN oper_cost Decimal(25,4); 
ALTER TABLE profile_result ALTER COLUMN annual_reserve Decimal(25,4); 
ALTER TABLE profile_result ALTER COLUMN invest_per_benef Decimal(25,4); 
ALTER TABLE profile_result ALTER COLUMN cost_per_benef Decimal(25,4); 
ALTER TABLE profile_result ALTER COLUMN general_cost Decimal(25,4);

-- per-year general costs
ALTER TABLE project ADD COLUMN per_year_general BOOLEAN DEFAULT false NOT NULL; 
CREATE CACHED TABLE project_item_per_year (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1), class INT NOT NULL, proj_item_id INT NOT NULL, year INT NOT NULL, unit_num DECIMAL(15,4), own_resources DECIMAL(15,4), CONSTRAINT pk_project_item_per_year PRIMARY KEY (id), CONSTRAINT fk_project_item_per_year_project_item FOREIGN KEY (proj_item_id) REFERENCES project_item (proj_item_id), CONSTRAINT uq_project_item_per_year UNIQUE (proj_item_id, year));
-- migrate existing data
INSERT INTO project_item_per_year (class, proj_item_id, year, unit_num, own_resources) SELECT 0, proj_item_id, 0, unit_num, own_resources FROM project_item WHERE class=2 OR class=3 OR class=6 OR class=7;
-- cleanup redundant data
UPDATE project_item SET unit_num=NULL, own_resources=NULL WHERE class=2 OR class=3 OR class=6 OR class=7;

-- convert nig project contributions to new per-year structure
-- condense contributions 
INSERT INTO project_item (class, donor_order_by, description, unit_type, unit_cost, project_id, order_by) SELECT DISTINCT -1, donor_order_by, description, unit_type, unit_cost, project_id, order_by FROM project_item WHERE class=5;
-- get per-year data
INSERT INTO project_item_per_year (class, proj_item_id, year, unit_num) SELECT 1, b.proj_item_id, a.year_begin - 1, a.unit_num FROM project_item a JOIN project_item b ON (a.donor_order_by=b.donor_order_by AND a.description=b.description AND a.unit_type=b.unit_type AND a.unit_cost=b.unit_cost AND a.project_id=b.project_id AND a.order_by=b.order_by AND a.class=5 AND b.class=-1);
-- cleanup
DELETE FROM project_item WHERE class=5;
UPDATE project_item SET class=5 WHERE class=-1;

-- no-cycle profile products
ALTER TABLE profile_product ADD COLUMN cycles BOOLEAN DEFAULT true;
UPDATE profile_product SET cycles=true;

-- user: owner and per-user paging size for search results
ALTER TABLE user ADD COLUMN page_size SMALLINT;
ALTER TABLE user ADD COLUMN owner BOOLEAN DEFAULT FALSE;
UPDATE user SET owner=TRUE WHERE administrator=TRUE;
	</query>
	</version>
	<version number="4.4">
	<query>
-- project block cycle lengths as decimals
ALTER TABLE project_block ALTER COLUMN cycle_per_year DECIMAL(12,4);
ALTER TABLE project_block ALTER COLUMN cycle_first_year DECIMAL(12,4);
ALTER TABLE project_block ALTER COLUMN cycle_first_year_income DECIMAL(12,4);
ALTER TABLE project_block ALTER COLUMN cycle_length DECIMAL(12,4);

-- technician as text field
ALTER TABLE project ADD COLUMN technician_freetext VARCHAR(100);
ALTER TABLE profile ADD COLUMN technician_freetext VARCHAR(100);

-- store pay period in project_result
ALTER TABLE PROJECT_RESULT ADD COLUMN pay_period_before DECIMAL(12,4);
ALTER TABLE PROJECT_RESULT ADD COLUMN pay_period_after DECIMAL(12,4);
-- pay period in project indicators
ALTER TABLE user ADD COLUMN result_pay_period_before BOOLEAN DEFAULT FALSE;
ALTER TABLE user ADD COLUMN result_pay_period_after BOOLEAN DEFAULT TRUE;

-- wc period avg in project_result
ALTER TABLE project_result ADD COLUMN wc_period_avg DECIMAL(12,4);
	</query>
	</version>
</sql>